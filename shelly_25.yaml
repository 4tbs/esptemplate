# Identity --------------------------------------------------------------------
esphome:
  name: ${device_name}

esp8266:
  board: esp01_1m

# Network ---------------------------------------------------------------------
wifi:
  networks:
    - ssid: $wifi_ssid
      password: $wifi_password
      hidden: true
  
  manual_ip:
    static_ip: $wifi_ip
    gateway: $wifi_gateway
    subnet: $wifi_subnet

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name} FB"
    password: $fallback_pw

# Management ------------------------------------------------------------------
captive_portal:
logger:
api:
ota:
  platform: esphome

# Device ----------------------------------------------------------------------
i2c:
  sda: GPIO12
  scl: GPIO14

switch:
  - platform: gpio
    restore_mode: RESTORE_DEFAULT_OFF
    name: "${device_friendly_name} ${relay1_friendly_name}"
    icon: "mdi:lightbulb"
    pin: GPIO4
    id: relay1

  - platform: gpio
    restore_mode: RESTORE_DEFAULT_OFF
    name: "${device_friendly_name} ${relay2_friendly_name}"
    icon: "mdi:lightbulb"
    pin: GPIO15
    id: relay2

sensor:
  - platform: wifi_signal
    name: "${device_friendly_name} WiFi Signal"
    update_interval: 60s

  - platform: ade7953_i2c
    voltage:
      name: "${device_friendly_name} Voltage"
      icon: mdi:flash-circle
    # Note! Shelly switches sensors for channel 1 & 2
    current_a:
      name: "${device_friendly_name} Current ${relay2_friendly_name}"
      icon: mdi:flash-circle
      filters:
        - lambda: if (x <= 0.05) return 0; else return (x);
    current_b:
      name: "${device_friendly_name} Current ${relay1_friendly_name}"
      icon: mdi:flash-circle
      filters:
        - lambda: if (x <= 0.05) return 0; else return (x);
    active_power_a:
      name: "${device_friendly_name} Power ${relay2_friendly_name}"
      icon: mdi:flash-circle
      filters:
        - multiply: -1
        - lambda: if (x <= 6.0) return 0; else return (x);
    active_power_b:
      name: "${device_friendly_name} Power ${relay1_friendly_name}"
      icon: mdi:flash-circle
      filters:
        - multiply: -1
        - lambda: if (x <= 6.0) return 0; else return (x);
    update_interval: 10s

  # NTC Temperature
  - platform: ntc
    sensor: Resistance
    name: "${device_friendly_name} Temperature"
    unit_of_measurement: "Â°C"
    accuracy_decimals: 1
    icon: mdi:thermometer
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      above: 90
      then: # Security shutdown by overheating
        - switch.turn_off: relay1
        - switch.turn_off: relay2

  - platform: resistance
    id: Resistance
    sensor: Source
    configuration: DOWNSTREAM
    resistor: 32kOhm

  - platform: adc
    id: Source
    pin: A0
    update_interval: 10s

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO13
#      mode: INPUT_PULLUP
#      inverted: True
    name: "${device_friendly_name} Switch ${relay1_friendly_name}"
    internal: true
    on_press: # used with spring loaded switches
      - switch.toggle: relay1
    #on_release: # used with spring loaded switches (inverted)
    #  - switch.turn_off: relay1
    #on_state: # used with normal "toggle" switches
    #  - switch.toggle: relay1

  - platform: gpio
    pin:
      number: GPIO5
#      mode: INPUT_PULLUP
#      inverted: True
    name: "${device_friendly_name} Switch ${relay2_friendly_name}"
    internal: true
    on_press: # used with spring loaded switches
      - switch.toggle: relay2
    #on_release: # used with spring loaded switches (inverted)
    #  - switch.turn_off: relay2
    #on_state: # used with normal "toggle" switches
    #  - switch.toggle: relay2

  - platform: status
    name: "${device_friendly_name} Status"
    
#   GPIO16 added to lower temp in device
  - platform: gpio
    pin: GPIO16
    name: "ade7953 IRQ pin"
    internal: true

status_led:
  pin: GPIO0
